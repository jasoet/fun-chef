buildscript {
    ext {
        kotlinVersion = "1.3.0"
        coroutineVersion = "1.0.0"
        serializationVersion = "0.9.0"

        arrowVersion = "0.7.3"

        jUnitVersion = "5.3.1"

        spekVersion = "2.0.0-rc.1"
        ktorVersion = "1.0.0-beta-3"
        kluentVersion = "1.4"
        mockKVersion = "1.8.10.kotlin13"

        logbackVersion = "1.2.3"

        experimentalFlags = [
                "-Xuse-experimental=kotlin.Experimental",
                "-Xuse-experimental=kotlin.ExperimentalMultiplatform",
                "-Xuse-experimental=kotlinx.serialization.ImplicitReflectionSerializer",
        ]
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.0'
    id "org.jetbrains.kotlin.kapt" version "1.3.0"
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC8"
}

group 'id.jasoet'
version '1.0-SNAPSHOT'

apply plugin: "jacoco"
apply plugin: "application"
apply plugin: "idea"
apply plugin: 'kotlinx-serialization'

mainClassName = "id.jasoet.funchef.Application"

repositories {
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url "https://kotlin.bintray.com/ktor" }
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serializationVersion"

    compile "io.ktor:ktor-client-json:$ktorVersion"
    compile "io.ktor:ktor-client-apache:$ktorVersion"
    compile "io.ktor:ktor-client-gson:$ktorVersion"
    compile "io.arrow-kt:arrow-core:$arrowVersion"

    compile "ch.qos.logback:logback-core:$logbackVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "org.bouncycastle:bcpkix-jdk15on:1.60"
    compile "org.bouncycastle:bcprov-jdk15on:1.60"

    testCompile "org.jetbrains.kotlin:kotlin-test"

    testCompile "org.amshove.kluent:kluent:$kluentVersion"
    
    testImplementation "io.mockk:mockk:$mockKVersion"
    
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jUnitVersion"

    testImplementation("org.spekframework.spek2:spek-dsl-jvm:$spekVersion") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntimeOnly("org.spekframework.spek2:spek-runner-junit5:$spekVersion") {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
}

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

detekt {
    version = "1.0.0.RC9.2"
    profile("main") {
        input = "$projectDir/src/main/kotlin"
        config = "$rootDir/detekt.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    }
}

test {
    finalizedBy detektCheck
    finalizedBy jacocoTestReport

    useJUnitPlatform {
        includeEngines 'spek2'
    }

    testLogging {
        exceptionFormat = "full"
        events "skipped", "failed"
    }
}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.3"
        languageVersion = "1.3"
        allWarningsAsErrors = false

        freeCompilerArgs += experimentalFlags
    }
}

compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.3"
        languageVersion = "1.3"
        allWarningsAsErrors = false

        freeCompilerArgs += experimentalFlags
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true

        sourceDirs += file('build/generated/source/kapt/main')
        testSourceDirs += file('build/generated/source/kapt/test')

        sourceDirs += file('build/generated/source/kaptKotlin/main')
        testSourceDirs += file('build/generated/source/kaptKotlin/test')

        sourceDirs += file('build/tmp/kapt/main/kotlinGenerated')
        testSourceDirs += file('build/tmp/kapt/test/kotlinGeneratedst')
    }
}

task compile(dependsOn: "testClasses")

wrapper {
    gradleVersion = '5.0-rc-1'
}
